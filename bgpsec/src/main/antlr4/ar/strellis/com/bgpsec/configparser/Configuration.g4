grammar Configuration;

prog: statement+ ;
statement: (statement_interface|statement_router);
statement_interface: interface_desc OPENBRACE option_interface+ CLOSEBRACE ;
interface_desc: 'interface';
option_interface: (option_interface_description|option_interface_ip|option_interface_negotiation|option_interface_netmask);
option_interface_description: 'description' STRING;
option_interface_ip: 'ip' IPV4;
option_interface_netmask: 'netmask' IPV4;
option_interface_negotiation: 'negotiation' (AUTO|full_duplex|half_duplex);
statement_router: ROUTER OPENBRACE option_router+ neighbor+ CLOSEBRACE;
option_router: (option_router_kind|option_router_asnumber|option_router_log) ;
option_router_kind: 'kind' STRING;
option_router_asnumber: 'asnumber' INT;
option_router_log: 'log-neighbor-changes';
neighbor: NEIGHBOR neighbor_description;
neighbor_description: OPENBRACE (neighbor_ip|neighbor_type|remote_as|neighbor_description_string)+ CLOSEBRACE ;
neighbor_description_string: 'description' STRING;
neighbor_ip: 'ip' IPV4;
neighbor_type: 'type' (INTERNAL|EXTERNAL);
remote_as: 'remote_as' INT;
ROUTER: 'router';
NEIGHBOR: 'neighbor';
AUTO: 'auto';
full_duplex: 'full_duplex';
half_duplex: 'half_duplex';
INTERNAL: 'internal';
EXTERNAL: 'external';
IPV4: INT '.' INT '.' INT '.' INT ;
STRING: ID_LETTER (ID_LETTER | DIGIT)*;
ID_LETTER : 'a'..'z'|'A'..'Z'|'_' ;
INT: DIGIT+;
DIGIT : [0-9] ;
OPENBRACE: '{';
CLOSEBRACE: '}';
WS : [ \t\n\r] + -> skip;